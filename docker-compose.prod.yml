version: '3'
services:
  postgres:
    restart: always
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.prod.db
    networks:
      - shared_network

  web:
    restart: always
    build: ./
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    env_file:
      - .env.prod
      - .env.prod.db
    volumes:
      - static_volume:/code/static
    networks:
      - shared_network
    command: >
      bash -c "python wait_for_postgres.py &&
              python manage.py migrate &&
              python manage.py collectstatic --noinput &&
              python manage.py create_oauth_app &&
              gunicorn --bind 0.0.0.0:8000 --access-logfile - wall_app_api.wsgi:application"

volumes:
  postgres_data:
  static_volume:

networks:
  shared_network:
    driver: bridge
